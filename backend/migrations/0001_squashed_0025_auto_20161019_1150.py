# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-19 12:51
from __future__ import unicode_literals

import backend.helper
import backend.models.profile
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils import timezone


class Migration(migrations.Migration):

    replaces = [('backend', '0001_initial'), ('backend', '0002_auto_20161001_1056'), ('backend', '0003_agenda_profile'), ('backend', '0004_auto_20161003_1545'), ('backend', '0005_auto_20161006_1234'), ('backend', '0006_auto_20161007_0808'), ('backend', '0007_auto_20161007_0813'), ('backend', '0008_auto_20161010_1122'), ('backend', '0009_track'), ('backend', '0010_session_track'), ('backend', '0011_auto_20161015_0350'), ('backend', '0012_venue'), ('backend', '0013_session_venue'), ('backend', '0014_auto_20161015_0619'), ('backend', '0015_auto_20161015_0623'), ('backend', '0016_auto_20161016_1452'), ('backend', '0017_auto_20161016_1835'), ('backend', '0018_agenda_duration'), ('backend', '0019_auto_20161017_1442'), ('backend', '0020_auto_20161017_1629'), ('backend', '0021_auto_20161017_1629'), ('backend', '0022_auto_20161017_1635'), ('backend', '0023_auto_20161018_0705'), ('backend', '0024_session_popularity'), ('backend', '0025_auto_20161019_1150')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='event name')),
                ('location', models.CharField(blank=True, max_length=255)),
                ('published', models.BooleanField(default=False)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.CharField(blank=True, max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_expiry', models.DateTimeField(default=timezone.now)),
                ('verification_token', models.CharField(default=backend.helper.UniqueTokenGenerator('Profile', field='verification_token', length=20), max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('start_at', models.DateTimeField(blank=True, null=True)),
                ('end_at', models.DateTimeField(blank=True, null=True)),
                ('agenda', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='backend.Agenda')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='category',
            name='agenda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Agenda'),
        ),
        migrations.AddField(
            model_name='session',
            name='tags',
            field=models.ManyToManyField(to='backend.Tag'),
        ),
        migrations.AddField(
            model_name='agenda',
            name='profile',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='backend.Profile'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='agenda',
            name='date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='session',
            name='end_at',
        ),
        migrations.AddField(
            model_name='session',
            name='duration',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='session',
            name='start_at',
        ),
        migrations.AddField(
            model_name='session',
            name='start_at',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('company', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('company_description', models.TextField(blank=True)),
                ('company_url', models.URLField(blank=True)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Agenda')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='session',
            name='speakers',
            field=models.ManyToManyField(to='backend.Speaker'),
        ),
        migrations.RenameField(
            model_name='agenda',
            old_name='date',
            new_name='start_at',
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Agenda')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='session',
            name='track',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='backend.Track'),
            preserve_default=False,
        ),
        migrations.AlterModelOptions(
            name='session',
            options={'ordering': ('start_at',)},
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('unit', models.CharField(blank=True, max_length=30)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Agenda')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='session',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Venue'),
        ),
        migrations.AlterField(
            model_name='session',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.Track'),
        ),
        migrations.AlterField(
            model_name='session',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Track'),
        ),
        migrations.AddField(
            model_name='agenda',
            name='duration',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1, 'The duration of the event must be at least one day long')]),
        ),
        migrations.AddField(
            model_name='agenda',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='session',
            name='duration',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1, 'Duration must be larger than zero'), django.core.validators.MinValueValidator(1440, 'A session cannot be longer than 24 hours long')]),
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Session')),
            ],
        ),
        migrations.CreateModel(
            name='Viewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(default=backend.helper.UniqueTokenGenerator('Viewer', field='token', length=20), max_length=30, unique=True)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Agenda')),
                ('sessions', models.ManyToManyField(through='backend.Registration', to='backend.Session')),
                ('last_email_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='registration',
            name='viewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Viewer'),
        ),
        migrations.AlterUniqueTogether(
            name='registration',
            unique_together=set([('viewer', 'session')]),
        ),
        migrations.AlterUniqueTogether(
            name='viewer',
            unique_together=set([('email', 'agenda')]),
        ),
        migrations.AddField(
            model_name='session',
            name='popularity',
            field=models.IntegerField(default=0, editable=False),
        ),
    ]
